// Generated by CoffeeScript 1.10.0
(function() {
  var $, Controller, SiteHeader,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Controller = require('zooniverse/controllers/base-controller');

  $ = window.jQuery;

  SiteHeader = (function(superClass) {
    extend(SiteHeader, superClass);

    SiteHeader.prototype.className = 'readymade-site-header';

    SiteHeader.prototype.template = require('./templates/site-header');

    SiteHeader.prototype.elements = {
      '.readymade-site-links': 'linksList'
    };

    function SiteHeader() {
      this.onHashChange = bind(this.onHashChange, this);
      SiteHeader.__super__.constructor.apply(this, arguments);
      addEventListener('hashchange', this.onHashChange);
      setTimeout(this.onHashChange);
    }

    SiteHeader.prototype.addNavLink = function(href, label) {
      return this.linksList.append("<a href='" + href + "' class='readymade-site-link'>" + label + "</a>\n");
    };

    SiteHeader.prototype.onHashChange = function() {
      var href, i, len, link, match, ref, results;
      ref = this.linksList.find('a');
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        link = ref[i];
        href = link.getAttribute('href');
        match = href.length === 2 ? location.hash === href : location.hash.indexOf(href) === 0;
        results.push($(link).toggleClass('active', match));
      }
      return results;
    };

    return SiteHeader;

  })(Controller);

  module.exports = SiteHeader;

}).call(this);
